<?php
// automatically generated by the FlatBuffers compiler, do not modify

declare(strict_types=1);

use \Google\FlatBuffers\Constants;
use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatbufferBuilder;

class HandFan extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return HandFan
     */
    public static function getRootAsHandFan(ByteBuffer $bb): HandFan
    {
        $obj = new HandFan();
        return $obj->init($bb->followUOffset($bb->getPosition()), $bb);
    }

    public static function HandFanIdentifier(): string
    {
        return "MOVI";
    }

    public static function HandFanBufferHasIdentifier(ByteBuffer $buf): bool
    {
        return self::__has_identifier($buf, self::HandFanIdentifier());
    }

    /**
     * @param NPosT $_i offset
     * @param ByteBuffer $_bb
     * @return HandFan
     **/
    public function init(int $_i, ByteBuffer $_bb): HandFan
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return IntT
     */
    public function getLength(): int
    {
        $o = $this->__offset(4);
        return $o !== 0 ? $this->bb->getInt(Constants::asNPos($o + $this->bb_pos)) : 0;
    }

    /**
     * @param FlatbufferBuilder $builder
     */
    public static function startHandFan(FlatbufferBuilder $builder): void
    {
        $builder->StartObject(1);
    }

    /**
     * @param FlatbufferBuilder $builder
     * @param IntT $length
     * @return WPosT
     */
    public static function createHandFan(FlatbufferBuilder $builder, int $length): int
    {
        $builder->startObject(1);
        self::addLength($builder, $length);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatbufferBuilder $builder
     * @param IntT $length
     */
    public static function addLength(FlatbufferBuilder $builder, int $length): void
    {
        $builder->addIntX(0, $length, 0);
    }

    /**
     * @param FlatbufferBuilder $builder
     * @return WPosT table offset
     */
    public static function endHandFan(FlatbufferBuilder $builder): int
    {
        $o = $builder->endObject();
        return $o;
    }
}
