<?php
// automatically generated by the FlatBuffers compiler, do not modify

declare(strict_types=1);

namespace MyGame;

use \Google\FlatBuffers\Constants;
use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatbufferBuilder;

class InParentNamespace extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return InParentNamespace
     */
    public static function getRootAsInParentNamespace(ByteBuffer $bb): InParentNamespace
    {
        $obj = new InParentNamespace();
        return $obj->init($bb->followUOffset($bb->getPosition()), $bb);
    }

    public static function InParentNamespaceIdentifier()
    {
        return "MONS";
    }

    public static function InParentNamespaceBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::InParentNamespaceIdentifier());
    }

    public static function InParentNamespaceExtension()
    {
        return "mon";
    }

    /**
     * @param NPosT $_i offset
     * @param ByteBuffer $_bb
     * @return InParentNamespace
     **/
    public function init(int $_i, ByteBuffer $_bb): InParentNamespace
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @param FlatbufferBuilder $builder
     */
    public static function startInParentNamespace(FlatbufferBuilder $builder): void
    {
        $builder->StartObject(0);
    }

    /**
     * @param FlatbufferBuilder $builder
     * @return WPosT
     */
    public static function createInParentNamespace(FlatbufferBuilder $builder, ): int
    {
        $builder->startObject(0);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatbufferBuilder $builder
     * @return WPosT table offset
     */
    public static function endInParentNamespace(FlatbufferBuilder $builder): int
    {
        $o = $builder->endObject();
        return $o;
    }
}
