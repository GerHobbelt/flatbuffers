<?php
// automatically generated by the FlatBuffers compiler, do not modify

declare(strict_types=1);

namespace MyGame\Example;

use \Google\FlatBuffers\Constants;
use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatbufferBuilder;

class Ability extends Struct
{
    /**
     * @param NPosT $_i offset
     * @param ByteBuffer $_bb
     * @return Ability
     **/
    public function init(int $_i, ByteBuffer $_bb): Ability
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return UintT
     */
    public function GetId()
    {
        return $this->bb->getUint($this->bb_pos + 0);
    }

    /**
     * @return UintT
     */
    public function GetDistance()
    {
        return $this->bb->getUint($this->bb_pos + 4);
    }


    /**
     * @return WPosT offset
     */
    public static function createAbility(FlatbufferBuilder $builder, $id, $distance): int
    {
        $builder->prep(4, 8);
        $builder->putUint($distance);
        $builder->putUint($id);
        return $builder->offset();
    }
}
